<?xml version="1.0" encoding="UTF-8"?>
<submission>
  <student>
    <name>Alois Paulus</name>
    <noma>5299-14-00</noma>
  </student>
  <solutions>

    <puzzle id="S1">

      <answer language="tutorial-d"><![CDATA[
        SUPPLIERS
      ]]></answer>

      <answer language="sql"><![CDATA[
        ﻿select * from suppliers
      ]]></answer>

    </puzzle>

   <puzzle id="S2">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS { SID, NAME }
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select 	sid,name from suppliers
      ]]></answer>

    </puzzle>

   <puzzle id="S3">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS { ALL BUT STATUS }
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select sid,name,city from suppliers
      ]]></answer>

    </puzzle>

 <puzzle id="S4">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS { CITY }
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct city from suppliers
      ]]></answer>

    </puzzle>

 <puzzle id="S5">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS  WHERE STATUS >= 15 AND STATUS <=25
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct * from suppliers where (status >= 15 and status <= 25)
      ]]></answer>

    </puzzle>

 <puzzle id="S6">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS  WHERE CITY = "London" OR CITY = "Athens"
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct * from suppliers where (city = 'London' or city = 'Athens')
      ]]></answer>

    </puzzle>

 <puzzle id="S7">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS WHERE NOT (CITY = "London") AND NOT (CITY = "Athens")
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct * from suppliers  where (city != 'London' and city != 'Athens')
      ]]></answer>

    </puzzle>

 <puzzle id="S8">

      <answer language="tutorial-d"><![CDATA[
	(SUPPLIERS WHERE CITY = "London") { SID }
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct sid from suppliers where (city = 'London')
      ]]></answer>

    </puzzle>

<puzzle id="E1">

      <answer language="tutorial-d"><![CDATA[
	(SHIPMENTS WHERE PID = P#("P1"))  {SID}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct sid from shipments where (PID = 'P1')
      ]]></answer>

    </puzzle>

<puzzle id="E2">

      <answer language="tutorial-d"><![CDATA[
	COUNT(SHIPMENTS)
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select count(*) from shipments
      ]]></answer>

    </puzzle>

<puzzle id="E3">

      <answer language="tutorial-d"><![CDATA[
	COUNT(SHIPMENTS WHERE SID = S#("S1"))  
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select count(*) from shipments where sid = 'S1'
      ]]></answer>

    </puzzle>

<puzzle id="E4">

      <answer language="tutorial-d"><![CDATA[
	 (SHIPMENTS JOIN SUPPLIERS) {SID, NAME, STATUS, CITY }
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct sup.sid, name, status, city from shipments as ship join suppliers as sup on ship.sid = sup.sid
      ]]></answer>

    </puzzle>

<puzzle id="E5">

      <answer language="tutorial-d"><![CDATA[
	(SUPPLIERS MINUS ((SHIPMENTS JOIN SUPPLIERS) {SID, NAME, STATUS, CITY }))
      ]]></answer>

      <answer language="sql"><![CDATA[
	select sid,name,status from suppliers where sid not in (select distinct sid from shipments);
      ]]></answer>

    </puzzle>

<puzzle id="E6">

      <answer language="tutorial-d"><![CDATA[
	((SHIPMENTS JOIN PARTS RENAME { NAME as PARTNAME }) JOIN SUPPLIERS) {SID,NAME,PID,PARTNAME}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select sid, suppliers.name as sname , pid, parts.name as pname, qty from shipments join suppliers using(sid) join parts using(pid)
      ]]></answer>

    </puzzle>

<puzzle id="M1">

      <answer language="tutorial-d"><![CDATA[
	SUM((SHIPMENTS WHERE SID = S#("S1")), QTY)  
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿SELECT SUM(qty) from shipments join parts using (pid) where sid = 'S1'
      ]]></answer>

    </puzzle>

<puzzle id="M2">

      <answer language="tutorial-d"><![CDATA[
	((SUPPLIERS WHERE CITY = "Paris") JOIN SHIPMENTS)  {PID}
      ]]></answer>

      <answer language="sql"><![CDATA[
	SELECT distinct pid from suppliers as sup join shipments using(sid) where sup.city = 'Paris'
      ]]></answer>

    </puzzle>
<puzzle id="M3">

      <answer language="tutorial-d"><![CDATA[
	((SUMMARIZE SUPPLIERS BY {CITY} : { c := COUNT() }) WHERE c>=2) {CITY}
      ]]></answer>

      <answer language="sql"><![CDATA[
	SELECT city from suppliers group by city having count(*) >= 2
      ]]></answer>

    </puzzle>
<puzzle id="M4">

      <answer language="tutorial-d"><![CDATA[
	(SUPPLIERS WHERE CITY <= MIN(SUPPLIERS,CITY)) {SID}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select sid from suppliers where city <= (select MIN(city) from suppliers)
      ]]></answer>

    </puzzle>
<puzzle id="M5">

      <answer language="tutorial-d"><![CDATA[
	SUMMARIZE SHIPMENTS PER (SUPPLIERS {SID}) : { total:=SUM(QTY)}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿SELECT sid, sum(QTY)
FROM shipments GROUP BY sid
UNION
SELECT sid, 0
FROM suppliers AS sup WHERE NOT EXISTS (
SELECT * FROM shipments
WHERE sid = sup.sid )
      ]]></answer>

    </puzzle>
<puzzle id="M6">

      <answer language="tutorial-d"><![CDATA[
	(PARTS WHERE WEIGHT <= MIN ( PARTS , WEIGHT) ) {PID}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct pid from parts where weight <= (select min(weight) from parts)
      ]]></answer>

    </puzzle>

<puzzle id="D1">

      <answer language="tutorial-d"><![CDATA[
	 ((PARTS RENAME {NAME AS PARTNAME, CITY AS PARTCITY}) NOT MATCHING (SHIPMENTS JOIN (SUPPLIERS WHERE CITY = "Paris")) ) {PID}
      ]]></answer>

      <answer language="sql"><![CDATA[
	(select pid from parts) EXCEPT (select distinct pid from suppliers as sup join shipments as ship using(sid) join parts as part using (pid) where sup.city = 'Paris')
      ]]></answer>

    </puzzle>

<puzzle id="D2">

      <answer language="tutorial-d"><![CDATA[
	COUNT((EXTEND SUPPLIERS : { PARTSHIPED := ( SHIPMENTS JOIN RELATION { TUPLE { SID SID } } ) } { SID, PARTSHIPED}) WHERE PARTSHIPED{PID} = PARTS{PID})
      ]]></answer>

      <answer language="sql"><![CDATA[
SELECT distinct sid FROM shipments AS ship1
WHERE NOT EXISTS (
SELECT * FROM parts AS part
WHERE NOT EXISTS (
SELECT * FROM shipments AS ship2
WHERE ship2.sid = ship1.sid
AND ship2.pid = part.pid ) )
      ]]></answer>

    </puzzle>

<puzzle id="D3">

      <answer language="tutorial-d"><![CDATA[
	SUPPLIERS WHERE STATUS < (STATUS FROM (TUPLE FROM SUPPLIERS WHERE SID = S#("S1"))) 
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct * from suppliers where status < (select distinct status from suppliers where SID = 'S1')
      ]]></answer>

    </puzzle>

<puzzle id="D4">

      <answer language="tutorial-d"><![CDATA[
	(SUPPLIERS JOIN PARTS RENAME {NAME AS PARTNAME, CITY AS PARTCITY} NOT MATCHING SHIPMENTS) {SID,PID}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct sid,pid from suppliers, parts except select distinct sid,pid from shipments
      ]]></answer>

    </puzzle>

<puzzle id="D5">

      <answer language="tutorial-d"><![CDATA[
	SUMMARIZE (SUMMARIZE PARTS BY {CITY} :{ sd:=count(), total:=SUM(0),ss:=SUM(0) }
UNION
SUMMARIZE (SUMMARIZE SHIPMENTS PER ( SUPPLIERS{SID,CITY} ) : {total:=SUM(QTY)}) BY {CITY} :{ total:=SUM(total), ss:=count(), sd:=SUM(0)}) BY {CITY} : {total:=SUM(total), ss:=SUM(ss), sd:=SUM(sd)}
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select city,SUM(total) as total, SUM(sd) as sd, SUM(ss) as ss from ((select city,sum(total) as total, count(*) as ss, 0 as sd from (SELECT sid,city,(select sum(QTY) from shipments where sup.sid = sid) as total from suppliers as sup WHERE exists (SELECT * FROM shipments
WHERE sup.sid = sid ) 
UNION
SELECT sid, city,0 as total
FROM suppliers AS sup WHERE NOT EXISTS (
SELECT * FROM shipments
WHERE sup.sid = sid )) as temp1 group by city)
UNION
SELECT city,0 as total, 0 as ss, count(*) as sd from parts group by city)  as temps2 group by city
      ]]></answer>

    </puzzle>

<puzzle id="D6">

      <answer language="tutorial-d"><![CDATA[
	PARTS WHERE WEIGHT >= ( MAX(PARTS,WEIGHT)) and NAME = MIN((PARTS WHERE WEIGHT >= ( MAX(PARTS,WEIGHT))) , NAME)
      ]]></answer>

      <answer language="sql"><![CDATA[
	﻿select distinct * from parts where weight >= (select MAX(weight) from parts) and NAME = (select min(NAME) from parts where weight >= (select MAX(weight) from parts))
      ]]></answer>

    </puzzle>

<puzzle id="H1">

      <answer language="tutorial-d"><![CDATA[
	((PARTS RENAME {NAME as PARTNAME}) {CITY})  JOIN SUMMARIZE SUPPLIERS BY {CITY} :{ avg_status := AVG(STATUS) } 
      ]]></answer>

      <answer language="sql"><![CDATA[

      ]]></answer>

    </puzzle>


<puzzle id="H2">

      <answer language="tutorial-d"><![CDATA[
EXTEND PARTS : { PARTSUPPLIERS := ( SHIPMENTS JOIN RELATION { TUPLE {  PID PID} } ) {SID} } {PID, PARTSUPPLIERS} WHERE PARTSUPPLIERS {SID} >= (SUPPLIERS WHERE CITY = 'London') {SID}
      ]]></answer>

      <answer language="sql"><![CDATA[

      ]]></answer>

    </puzzle>

<puzzle id="H3">

      <answer language="tutorial-d"><![CDATA[
	((EXTEND SUPPLIERS : { PARTSHIPED := ( SHIPMENTS JOIN RELATION { TUPLE {  SID SID } } ) {PID} } RENAME {SID AS SID1, PARTSHIPED AS PARTSHIPEDC}) {SID1, PARTSHIPEDC})

JOIN 

((EXTEND SUPPLIERS : { PARTSHIPED := ( SHIPMENTS JOIN RELATION { TUPLE {  SID SID } } ) {PID} } RENAME {SID AS SID2, PARTSHIPED AS PARTSHIPEDC}) {SID2, PARTSHIPEDC})

WHERE SID1 <> SID2
      ]]></answer>

      <answer language="sql"><![CDATA[

      ]]></answer>

    </puzzle>

<puzzle id="H4">

      <answer language="tutorial-d"><![CDATA[
      ]]></answer>

      <answer language="sql"><![CDATA[

      ]]></answer>

    </puzzle>

<puzzle id="H5">

      <answer language="tutorial-d"><![CDATA[
      ]]></answer>

      <answer language="sql"><![CDATA[

      ]]></answer>

    </puzzle>

  </solutions>
</submission>
